<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pro.user">

<select id="ResList" parameterType="String" resultType="ResDto">
SELECT SEQ,NAME,CATE,ADDR,"CALL","START","END",REST_START,REST_END,PARKING,"OPEN",CHK,"COMMENT",X,Y FROM RESLIST WHERE CATE = (SELECT ATTR FROM ATTRS WHERE TYPE='1카테고리' AND CODE =#{cate})
</select>

<select id="menulist" resultType="menuDto">
SELECT SEQ,NAME,CODE,RES_SEQ,PRICE FROM MENULIST
</select>

<select id="foodchosse" parameterType="Map" resultType="menuDto">
SELECT SEQ,NAME,CODE,RES_SEQ,PRICE FROM MENULIST WHERE SEQ IN 
<foreach collection="Rseq" item="seq" open="(" separator="," close=")">
#{seq}
</foreach>
</select>

	<select id="getMenuCount" parameterType="Map" resultType="int">
		SELECT COUNT(SEQ) FROM MENULIST WHERE SUBSTR(CODE,1,1)=#{codez}
	</select>
	
	<select id="getCateCode" resultType="String">
		SELECT CODE FROM ATTRS WHERE TYPE = '1카테고리' ORDER BY CODE
	</select>
	
	<select id="watchaBox" parameterType="Map" resultType="WatchaDto">
		SELECT T1.SEQ, T1.NAME, T1.CODE, T1.RES_SEQ, T1.PRICE, T2."CHANGE" 
		FROM 
		(SELECT SEQ, NAME, CODE, RES_SEQ, PRICE, ROW_NUMBER() OVER(ORDER BY SEQ ASC) AS RN FROM MENULIST WHERE SUBSTR(CODE,1,1)=#{codez}) T1,
		PHOTO T2
		WHERE  RN=#{count} AND T1.SEQ = T2.MENU_SEQ
	</select>
	
	<update id="setStars" parameterType="Map">
		UPDATE TASTE SET STAR = STAR+#{stars}, COUNTS=COUNTS+1
		WHERE USER_SEQ=#{user_seq} AND
		ATTR IN (
					SELECT ATTR FROM ATTRS WHERE (TYPE = '1카테고리' AND CODE = #{code1}) OR
												 (TYPE = '2주재료' AND CODE = #{code2}) OR
												 (TYPE = '3조리방식' AND CODE = #{code3}) OR
												 (TYPE = '4매움정도' AND CODE = #{code4}) OR
												 (TYPE = '5온도' AND CODE = #{code5})
				)
	</update>
	
	<select id="hasZero" parameterType="Map" resultType="int">
		SELECT COUNT(COUNTS) FROM TASTE WHERE COUNTS = 0 AND USER_SEQ = #{user_seq}
	</select>
	
	<select id="getZeros" parameterType="Map" resultType="AttrsDto">
		SELECT CODE, TYPE FROM ATTRS WHERE ATTR IN(SELECT ATTR FROM TASTE WHERE COUNTS = 0 AND USER_SEQ=#{user_seq})
	</select>
	<select id="getZeroMenuCount" parameterType="Map" resultType="int">
		SELECT COUNT(SEQ) FROM MENULIST WHERE SUBSTR(CODE,#{types},1)=#{codez}
	</select>
	
	<select id="getZeros2" parameterType="Map" resultType="AttrsDto">
		SELECT CODE, TYPE FROM ATTRS WHERE ATTR IN(SELECT ATTR FROM TASTE WHERE COUNTS = 0 AND USER_SEQ=
		<foreach index="0" item="user_seq" collection="user_seq">#{user_seq}</foreach>
		)
	</select>
	
	<select id="getZeroMenuCount2" parameterType="Map" resultType="int">
		SELECT COUNT(SEQ) FROM MENULIST WHERE SUBSTR(CODE,
		<foreach index="0" item="types" collection="types">#{types}</foreach>
		,1)=
		<foreach index="0" item="codez" collection="codez">#{codez}</foreach>
	</select>
	
	<select id="getZeroMenu" parameterType="Map" resultType="WatchaDto">
		SELECT T1.SEQ, T1.NAME, T1.CODE, T1.RES_SEQ, T1.PRICE, T2."CHANGE" 
		FROM
		 (SELECT SEQ, NAME, CODE, RES_SEQ, PRICE, ROW_NUMBER() OVER(ORDER BY SEQ ASC) AS RN FROM MENULIST WHERE SUBSTR(CODE,
		<foreach index="0" item="types" collection="types">#{types}</foreach>
		,1)=
		<foreach index="0" item="codez" collection="codez">#{codez}</foreach>
		) T1,
		PHOTO T2
		WHERE RN=
		<foreach index="0" item="count" collection="count">#{count}</foreach>
		 AND SEQ NOT IN
		<foreach separator="," close=")" open="(" item="seq" collection="seqs">TO_NUMBER(#{seq})</foreach>
		AND T1.SEQ = T2.MENU_SEQ
	</select>
	
	<select id="hasTaste" parameterType="Map" resultType="int">
		SELECT COUNT(COUNTS) FROM TASTE WHERE USER_SEQ = #{user_seq} AND COUNTS = 0	
	</select>
	
	<select id="getMyTaste" parameterType="Map" resultType="TasteDto">
		SELECT ATTR, TYPE, ROUND(STAR/COUNTS,2) AS STAR FROM TASTE WHERE USER_SEQ = #{user_seq}
	</select>
	
	<select id="recommendMenuList" parameterType="Map" resultType="MenuzDto">
		SELECT SEQ, CODE, NAME, STARZ, "CHANGE" FROM
(
SELECT X1.SEQ, X1.CODE, X1.NAME, X2.STARZ, ROW_NUMBER() OVER(ORDER BY X2.STARZ DESC) AS RN, X3."CHANGE"
		FROM MENULIST X1,
		(
		SELECT Z1.CODE||Z2.CODE||Z3.CODE||Z4.CODE||Z5.CODE AS CODEZ, (Z1.STARS*1.2+Z2.STARS*1.6+Z3.STARS*1.4+Z4.STARS*1.0+Z5.STARS*0.3)/5.5 AS STARZ
		FROM
		(SELECT CODE, T1.ATTR, STARS FROM (SELECT ATTR, TYPE, ROUND(STAR/COUNTS,2) AS STARS FROM TASTE WHERE TYPE='1카테고리' AND USER_SEQ = #{user_seq} ORDER BY 2, 3 DESC) T1, ATTRS T2 WHERE T1.ATTR=T2.ATTR) Z1,
		(SELECT CODE, T1.ATTR, STARS FROM (SELECT ATTR, TYPE, ROUND(STAR/COUNTS,2) AS STARS FROM TASTE WHERE TYPE='2주재료' AND USER_SEQ = #{user_seq} ORDER BY 2, 3 DESC) T1, ATTRS T2 WHERE T1.ATTR=T2.ATTR) Z2,
		(SELECT CODE, T1.ATTR, STARS FROM (SELECT ATTR, TYPE, ROUND(STAR/COUNTS,2) AS STARS FROM TASTE WHERE TYPE='3조리방식' AND USER_SEQ = #{user_seq} ORDER BY 2, 3 DESC) T1, ATTRS T2 WHERE T1.ATTR=T2.ATTR) Z3,
		(SELECT CODE, T1.ATTR, STARS FROM (SELECT ATTR, TYPE, ROUND(STAR/COUNTS,2) AS STARS FROM TASTE WHERE TYPE='4매움정도' AND USER_SEQ = #{user_seq} ORDER BY 2, 3 DESC) T1, ATTRS T2 WHERE T1.ATTR=T2.ATTR) Z4,
		(SELECT CODE, T1.ATTR, STARS FROM (SELECT ATTR, TYPE, ROUND(STAR/COUNTS,2) AS STARS FROM TASTE WHERE TYPE='5온도' AND USER_SEQ = #{user_seq} ORDER BY 2, 3 DESC) T1, ATTRS T2 WHERE T1.ATTR=T2.ATTR) Z5
		ORDER BY STARZ DESC
		) X2,
		PHOTO X3
		WHERE X1.CODE=X2.CODEZ AND X1.SEQ = X3.MENU_SEQ
) WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="getAllMenuCount" resultType="int">
		SELECT COUNT(SEQ) FROM MENULIST
	</select>
	
	<select id="watchaMoreMoreBox" parameterType="Map" resultType="WatchaDto">
		SELECT T1.SEQ, T1.NAME, T1.CODE, T1.RES_SEQ, T1.PRICE, T2."CHANGE"
		 FROM
		  (SELECT SEQ, NAME, CODE, RES_SEQ, PRICE, ROW_NUMBER() OVER(ORDER BY SEQ ASC) AS RN FROM MENULIST) T1,
		  PHOTO T2
		   WHERE RN=#{count} AND T1.SEQ = T2.MENU_SEQ
	</select>
	
	<select id="getKeepList" parameterType="Map" resultType="MenuzDto">
<!-- 		SELECT SEQ, NAME, CODE FROM MENULIST WHERE SEQ IN -->
<!-- 		<foreach separator="," close=")" open="(" item="seqs" collection="seqs">TO_NUMBER(#{seqs})</foreach> -->

		SELECT T1.SEQ, T1.NAME, T1.CODE, T2."CHANGE" FROM MENULIST T1, PHOTO T2 WHERE T1.SEQ=T2.MENU_SEQ AND T1.SEQ IN
		<foreach separator="," close=")" open="(" item="seqs" collection="seqs">TO_NUMBER(#{seqs})</foreach>
	</select>
	
	<select id="getResDetail" parameterType="Map" resultType="ResDto">
		SELECT SEQ, NAME, CATE, ADDR, "CALL", "START", "END", REST_START, REST_END, PARKING, "OPEN", CHK, "COMMENT", X, Y
		FROM KKST.RESLIST WHERE (NAME = #{name}) AND ("OPEN" = 'Y') AND (CHK ='DEF' OR CHK='Y')
	</select>
	
	
	<update id="customizeTastePlus" parameterType="Map">
		UPDATE TASTE SET STAR=(CASE WHEN ((STAR+CEIL(STAR/COUNTS)+5)/(COUNTS+1) BETWEEN 100 AND 200) THEN (COUNTS+1)*100 ELSE STAR+CEIL(STAR/COUNTS)+5 END), COUNTS=COUNTS+1
		WHERE USER_SEQ= #{user_seq} AND
			ATTR IN (
						SELECT ATTR FROM ATTRS WHERE (TYPE = '1카테고리' AND CODE = (SELECT SUBSTR(CODE,1,1) FROM MENULIST WHERE name= #{mName})) OR
													 (TYPE = '2주재료' AND CODE = (SELECT SUBSTR(CODE,2,1) FROM MENULIST WHERE name= #{mName})) OR
													 (TYPE = '3조리방식' AND CODE = (SELECT SUBSTR(CODE,3,1) FROM MENULIST WHERE name= #{mName})) OR
													 (TYPE = '4매움정도' AND CODE = (SELECT SUBSTR(CODE,4,1) FROM MENULIST WHERE name= #{mName})) OR
													 (TYPE = '5온도' AND CODE = (SELECT SUBSTR(CODE,5,1) FROM MENULIST WHERE name= #{mName}))
					)
	</update>
	
	<update id="customizeTasteMinus" parameterType="Map">
		UPDATE TASTE SET STAR=(CASE WHEN (STAR+CEIL(STAR/COUNTS)-2 BETWEEN -10 AND 1) THEN 1 ELSE STAR+CEIL(STAR/COUNTS)-2 END), COUNTS=COUNTS+1
		WHERE USER_SEQ= #{user_seq} AND
			ATTR IN (
						SELECT ATTR FROM ATTRS WHERE (TYPE = '1카테고리' AND CODE = #{code1}) OR
													 (TYPE = '2주재료' AND CODE = #{code2}) OR
													 (TYPE = '3조리방식' AND CODE = #{code3}) OR
													 (TYPE = '4매움정도' AND CODE = #{code4}) OR
													 (TYPE = '5온도' AND CODE = #{code5})
					)
	</update>
	
	<insert id="insertFile" parameterType="Map">
		INSERT INTO PHOTO VALUES(PHOTO_SEQ.NEXTVAL, #{originName}, #{storedName}, NULL, (SELECT SEQ FROM MENULIST WHERE NAME= (SUBSTR(#{originName},1,LENGTH(#{originName})-4))))
	</insert>
	
	<select id="getStoredNames" parameterType="Map" resultType="MenuzDto">
		SELECT "CHANGE" FROM PHOTO WHERE MENU_SEQ IN 
		<foreach separator="," close=")" open="(" item="seqs" collection="seqs">TO_NUMBER(#{seqs})</foreach>
	</select>
	
	
	
	<select id="ResList2" parameterType="Map" resultType="ResDto">
		SELECT SEQ,NAME,CATE,ADDR,"CALL","START","END",REST_START,REST_END,PARKING,"OPEN",CHK,"COMMENT",X,Y FROM RESLIST WHERE SEQ = NVL((SELECT RES_SEQ FROM MENULIST WHERE seq=#{seq}),0)
	</select>
	
	<select id="getResPhoto" parameterType="Map" resultType="String">
		SELECT "CHANGE" FROM PHOTO WHERE RES_SEQ = #{res_Seq} AND MENU_SEQ IS NULL
	</select>
	
	<select id="getResMenuPhoto" parameterType="Map" resultType="MenuzDto">
		SELECT SUBSTR(ORIGIN,1,LENGTH(ORIGIN)-4) AS NAME, "CHANGE" FROM PHOTO WHERE RES_SEQ = #{res_Seq} AND MENU_SEQ IS NOT NULL		
	</select>
	
	<select id="getResReviewCount" parameterType="Map" resultType="int">
		SELECT COUNT(SEQ) FROM REVIEW WHERE RES_SEQ = #{res_Seq}
	</select>
	
	<select id="getResReview" parameterType="Map" resultType="ResReviewDto">
		SELECT T1.SEQ, T2.NAME AS ID, T1.CONTENT, T1.REFER, T1.STAR, T1."DEPTH", T1.STEP, T1.RES_SEQ, T1.REGDATE, T1.REPORT, T1.LIKEY, T1.DISLIKEY, T1.DELFLAG
		FROM
			(SELECT SEQ, ID, CONTENT, REFER, STAR, "DEPTH", STEP, RES_SEQ, REGDATE, REPORT, LIKEY, DISLIKEY, DELFLAG, ROW_NUMBER() OVER(ORDER BY REFER DESC, STEP ASC) AS RN
			 FROM REVIEW WHERE DELFLAG = 'N' AND RES_SEQ = #{res_Seq}) T1,
			 USERS T2
		WHERE (T1.RN BETWEEN #{start} AND #{end}) AND (T1.ID=T2.SEQ)
	</select>
	
	<select id="beforeInsertResReview" parameterType="Map" resultType="int">
		SELECT COUNT(SEQ) FROM REVIEW WHERE ID = #{user_seq} AND RES_SEQ = #{res_Seq}
	</select>
	
	<insert id="insertResReview" parameterType="ResReviewDto" >
		INSERT INTO REVIEW(SEQ, ID, CONTENT, REFER, STAR, "DEPTH", STEP, RES_SEQ, REGDATE, REPORT, LIKEY, DISLIKEY, DELFLAG)
		VALUES(REVIEW_SEQ.NEXTVAL,#{id},#{content}, (SELECT NVL(MAX(REFER)+1,0) FROM REVIEW), TO_NUMBER(#{star}), 0, 0, TO_NUMBER(#{res_Seq}), SYSDATE, NULL, NULL, NULL, 'N')
	</insert>
	
	<update id="updateResReview" parameterType="ResReviewDto">
		UPDATE REVIEW SET CONTENT=#{content}, REGDATE=SYSDATE WHERE SEQ = #{seq}
	</update>
	
	<update id="insertAnsResReviewUpdate" parameterType="Map"><!-- 답변입력 -->
		UPDATE REVIEW SET STEP = STEP+1
		WHERE REFER = (SELECT REFER FROM REVIEW WHERE SEQ = #{seq} )
		AND STEP > (SELECT STEP FROM REVIEW WHERE SEQ = #{seq} )
	</update>
	
	<insert id="insertAnsResReviewInsert" parameterType="ResReviewDto"> 
		INSERT INTO REVIEW VALUES(REVIEW_SEQ.NEXTVAL, #{id}, #{content}, 
			(SELECT REFER FROM REVIEW WHERE SEQ= #{seq} ), #{star}, (SELECT STEP FROM REVIEW WHERE SEQ = #{seq} )+1, (SELECT DEPTH FROM REVIEW WHERE SEQ = #{seq} )+1, 
			#{res_Seq}, SYSDATE, NULL, NULL, NULL, 'N')
	</insert>
	
	<update id="delMyReview" parameterType="Map">
		UPDATE REVIEW SET DELFLAG = 'Y' WHERE ID = #{id} AND SEQ = #{seq}
	</update>
	
	<update id="addLikey0" parameterType="Map">
		UPDATE REVIEW SET LIKEY = #{id} WHERE SEQ = #{seq}
	</update>
	
	<update id="addLikey" parameterType="Map">
		UPDATE REVIEW SET LIKEY = LIKEY||#{id} WHERE SEQ = #{seq}
	</update>
	
</mapper>